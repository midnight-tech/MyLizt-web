@import "../../sass/abstract/variables";
@import "~bootstrap/dist/css/bootstrap.min.css";

.grid-container {
  background-color: $black3;
  display: grid;
  min-height: 100vh;
  position: relative;
  grid-template-columns:
    [menu-start] minmax(18vw, min-content) [menu-end void-left-start ] minmax(
      12rem,
      1fr
    )
    [ void-left-end content-start] repeat(
      8,
      [col-start] minmax(min-content, 40rem) [col-end]
    )
    [content-end void-right-start] minmax(12rem, 1fr) [void-right-end];
  grid-template-rows:
    [top-bar-start] 8rem [top-bar-end content-start] repeat(
      6,
      [col-start] minmax(auto, 1fr) [col-end]
    )
    [content-end footer-start] min-content [footer-end];

  @media only screen and (max-width: $bp-1600) {
    grid-template-columns:
      [menu-start] minmax(18vw, min-content) [menu-end void-left-start ] minmax(
        6rem,
        1fr
      )
      [ void-left-end content-start] repeat(
        8,
        [col-start] minmax(min-content, 40rem) [col-end]
      )
      [content-end void-right-start] minmax(6rem, 1fr) [void-right-end];
  }

  @media only screen and (max-width: $bp-1360) {
    grid-template-columns:
      [ void-left-start ] minmax(6rem, 1fr)
      [ void-left-end content-start] repeat(
        8,
        [col-start] minmax(min-content, 40rem) [col-end]
      )
      [content-end void-right-start] minmax(6rem, 1fr) [void-right-end];
  }

  @media only screen and (max-width: $bp-500) {
    grid-template-columns:
      [ void-left-start ] minmax(3rem, 1fr)
      [ void-left-end content-start] repeat(
        8,
        [col-start] minmax(min-content, 40rem) [col-end]
      )
      [content-end void-right-start] minmax(3rem, 1fr) [void-right-end];
  }
}

.menu-container {
  display: grid;
  grid-column: menu-start / menu-end;
  grid-row: top-bar-start / -1;

  @media only screen and (max-width: $bp-1360) {
    display: none;
    top: 0;
    position: absolute;
    height: 100%;
    width: 25vw;
    z-index: 10;
  }

  @media only screen and (max-width: $bp-1000) {
    width: 45vw;
  }

  @media only screen and (max-width: $bp-600) {
    width: 65vw;
  }

  @media only screen and (max-width: $bp-340) {
    width: 80vw;
  }

  &__show {
    @media only screen and (max-width: $bp-1360) {
      display: grid;
    }
  }
}

.top-bar-container {
  grid-column: content-start / content-end;
  grid-row: top-bar-start / top-bar-end;
  align-items: center;
}

.contents {
  display: grid;
  grid-column: content-start / content-end;
  grid-row: content-start / content-end;
}

.footer {
  display: grid;
  grid-column: content-start / content-end;
  grid-row: footer-start / footer-end;
  font-size: 1.6rem;
}

// Class utilizada para esconder o router que ocupa espaco quando o componente nao ocupa todo o espaco
.hidden-router {
  flex: 1 1 auto;
  display: flex;
  overflow: hidden;
}

.membrana {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: default;
  z-index: 5;
  background-color: rgba($black3, 0.9);
}
